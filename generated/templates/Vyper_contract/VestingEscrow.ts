// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Fund extends ethereum.Event {
  get params(): Fund__Params {
    return new Fund__Params(this);
  }
}

export class Fund__Params {
  _event: Fund;

  constructor(event: Fund) {
    this._event = event;
  }

  get recipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Claim extends ethereum.Event {
  get params(): Claim__Params {
    return new Claim__Params(this);
  }
}

export class Claim__Params {
  _event: Claim;

  constructor(event: Claim) {
    this._event = event;
  }

  get recipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get claimed(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RugPull extends ethereum.Event {
  get params(): RugPull__Params {
    return new RugPull__Params(this);
  }
}

export class RugPull__Params {
  _event: RugPull;

  constructor(event: RugPull) {
    this._event = event;
  }

  get recipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get rugged(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class CommitOwnership extends ethereum.Event {
  get params(): CommitOwnership__Params {
    return new CommitOwnership__Params(this);
  }
}

export class CommitOwnership__Params {
  _event: CommitOwnership;

  constructor(event: CommitOwnership) {
    this._event = event;
  }

  get admin(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ApplyOwnership extends ethereum.Event {
  get params(): ApplyOwnership__Params {
    return new ApplyOwnership__Params(this);
  }
}

export class ApplyOwnership__Params {
  _event: ApplyOwnership;

  constructor(event: ApplyOwnership) {
    this._event = event;
  }

  get admin(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class VestingEscrow extends ethereum.SmartContract {
  static bind(address: Address): VestingEscrow {
    return new VestingEscrow("VestingEscrow", address);
  }

  initialize(
    admin: Address,
    token: Address,
    recipient: Address,
    amount: BigInt,
    start_time: BigInt,
    end_time: BigInt,
    cliff_length: BigInt
  ): boolean {
    let result = super.call(
      "initialize",
      "initialize(address,address,address,uint256,uint256,uint256,uint256):(bool)",
      [
        ethereum.Value.fromAddress(admin),
        ethereum.Value.fromAddress(token),
        ethereum.Value.fromAddress(recipient),
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromUnsignedBigInt(start_time),
        ethereum.Value.fromUnsignedBigInt(end_time),
        ethereum.Value.fromUnsignedBigInt(cliff_length)
      ]
    );

    return result[0].toBoolean();
  }

  try_initialize(
    admin: Address,
    token: Address,
    recipient: Address,
    amount: BigInt,
    start_time: BigInt,
    end_time: BigInt,
    cliff_length: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "initialize",
      "initialize(address,address,address,uint256,uint256,uint256,uint256):(bool)",
      [
        ethereum.Value.fromAddress(admin),
        ethereum.Value.fromAddress(token),
        ethereum.Value.fromAddress(recipient),
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromUnsignedBigInt(start_time),
        ethereum.Value.fromUnsignedBigInt(end_time),
        ethereum.Value.fromUnsignedBigInt(cliff_length)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  unclaimed(): BigInt {
    let result = super.call("unclaimed", "unclaimed():(uint256)", []);

    return result[0].toBigInt();
  }

  try_unclaimed(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("unclaimed", "unclaimed():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  locked(): BigInt {
    let result = super.call("locked", "locked():(uint256)", []);

    return result[0].toBigInt();
  }

  try_locked(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("locked", "locked():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  recipient(): Address {
    let result = super.call("recipient", "recipient():(address)", []);

    return result[0].toAddress();
  }

  try_recipient(): ethereum.CallResult<Address> {
    let result = super.tryCall("recipient", "recipient():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  token(): Address {
    let result = super.call("token", "token():(address)", []);

    return result[0].toAddress();
  }

  try_token(): ethereum.CallResult<Address> {
    let result = super.tryCall("token", "token():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  start_time(): BigInt {
    let result = super.call("start_time", "start_time():(uint256)", []);

    return result[0].toBigInt();
  }

  try_start_time(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("start_time", "start_time():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  end_time(): BigInt {
    let result = super.call("end_time", "end_time():(uint256)", []);

    return result[0].toBigInt();
  }

  try_end_time(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("end_time", "end_time():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  cliff_length(): BigInt {
    let result = super.call("cliff_length", "cliff_length():(uint256)", []);

    return result[0].toBigInt();
  }

  try_cliff_length(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("cliff_length", "cliff_length():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  total_locked(): BigInt {
    let result = super.call("total_locked", "total_locked():(uint256)", []);

    return result[0].toBigInt();
  }

  try_total_locked(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("total_locked", "total_locked():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  total_claimed(): BigInt {
    let result = super.call("total_claimed", "total_claimed():(uint256)", []);

    return result[0].toBigInt();
  }

  try_total_claimed(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "total_claimed",
      "total_claimed():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  disabled_at(): BigInt {
    let result = super.call("disabled_at", "disabled_at():(uint256)", []);

    return result[0].toBigInt();
  }

  try_disabled_at(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("disabled_at", "disabled_at():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  initialized(): boolean {
    let result = super.call("initialized", "initialized():(bool)", []);

    return result[0].toBoolean();
  }

  try_initialized(): ethereum.CallResult<boolean> {
    let result = super.tryCall("initialized", "initialized():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  admin(): Address {
    let result = super.call("admin", "admin():(address)", []);

    return result[0].toAddress();
  }

  try_admin(): ethereum.CallResult<Address> {
    let result = super.tryCall("admin", "admin():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  future_admin(): Address {
    let result = super.call("future_admin", "future_admin():(address)", []);

    return result[0].toAddress();
  }

  try_future_admin(): ethereum.CallResult<Address> {
    let result = super.tryCall("future_admin", "future_admin():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get admin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get recipient(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get start_time(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get end_time(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get cliff_length(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class ClaimCall extends ethereum.Call {
  get inputs(): ClaimCall__Inputs {
    return new ClaimCall__Inputs(this);
  }

  get outputs(): ClaimCall__Outputs {
    return new ClaimCall__Outputs(this);
  }
}

export class ClaimCall__Inputs {
  _call: ClaimCall;

  constructor(call: ClaimCall) {
    this._call = call;
  }
}

export class ClaimCall__Outputs {
  _call: ClaimCall;

  constructor(call: ClaimCall) {
    this._call = call;
  }
}

export class Claim1Call extends ethereum.Call {
  get inputs(): Claim1Call__Inputs {
    return new Claim1Call__Inputs(this);
  }

  get outputs(): Claim1Call__Outputs {
    return new Claim1Call__Outputs(this);
  }
}

export class Claim1Call__Inputs {
  _call: Claim1Call;

  constructor(call: Claim1Call) {
    this._call = call;
  }

  get beneficiary(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class Claim1Call__Outputs {
  _call: Claim1Call;

  constructor(call: Claim1Call) {
    this._call = call;
  }
}

export class Claim2Call extends ethereum.Call {
  get inputs(): Claim2Call__Inputs {
    return new Claim2Call__Inputs(this);
  }

  get outputs(): Claim2Call__Outputs {
    return new Claim2Call__Outputs(this);
  }
}

export class Claim2Call__Inputs {
  _call: Claim2Call;

  constructor(call: Claim2Call) {
    this._call = call;
  }

  get beneficiary(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class Claim2Call__Outputs {
  _call: Claim2Call;

  constructor(call: Claim2Call) {
    this._call = call;
  }
}

export class Rug_pullCall extends ethereum.Call {
  get inputs(): Rug_pullCall__Inputs {
    return new Rug_pullCall__Inputs(this);
  }

  get outputs(): Rug_pullCall__Outputs {
    return new Rug_pullCall__Outputs(this);
  }
}

export class Rug_pullCall__Inputs {
  _call: Rug_pullCall;

  constructor(call: Rug_pullCall) {
    this._call = call;
  }
}

export class Rug_pullCall__Outputs {
  _call: Rug_pullCall;

  constructor(call: Rug_pullCall) {
    this._call = call;
  }
}

export class Commit_transfer_ownershipCall extends ethereum.Call {
  get inputs(): Commit_transfer_ownershipCall__Inputs {
    return new Commit_transfer_ownershipCall__Inputs(this);
  }

  get outputs(): Commit_transfer_ownershipCall__Outputs {
    return new Commit_transfer_ownershipCall__Outputs(this);
  }
}

export class Commit_transfer_ownershipCall__Inputs {
  _call: Commit_transfer_ownershipCall;

  constructor(call: Commit_transfer_ownershipCall) {
    this._call = call;
  }

  get addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class Commit_transfer_ownershipCall__Outputs {
  _call: Commit_transfer_ownershipCall;

  constructor(call: Commit_transfer_ownershipCall) {
    this._call = call;
  }
}

export class Apply_transfer_ownershipCall extends ethereum.Call {
  get inputs(): Apply_transfer_ownershipCall__Inputs {
    return new Apply_transfer_ownershipCall__Inputs(this);
  }

  get outputs(): Apply_transfer_ownershipCall__Outputs {
    return new Apply_transfer_ownershipCall__Outputs(this);
  }
}

export class Apply_transfer_ownershipCall__Inputs {
  _call: Apply_transfer_ownershipCall;

  constructor(call: Apply_transfer_ownershipCall) {
    this._call = call;
  }
}

export class Apply_transfer_ownershipCall__Outputs {
  _call: Apply_transfer_ownershipCall;

  constructor(call: Apply_transfer_ownershipCall) {
    this._call = call;
  }
}

export class Renounce_ownershipCall extends ethereum.Call {
  get inputs(): Renounce_ownershipCall__Inputs {
    return new Renounce_ownershipCall__Inputs(this);
  }

  get outputs(): Renounce_ownershipCall__Outputs {
    return new Renounce_ownershipCall__Outputs(this);
  }
}

export class Renounce_ownershipCall__Inputs {
  _call: Renounce_ownershipCall;

  constructor(call: Renounce_ownershipCall) {
    this._call = call;
  }
}

export class Renounce_ownershipCall__Outputs {
  _call: Renounce_ownershipCall;

  constructor(call: Renounce_ownershipCall) {
    this._call = call;
  }
}

export class Collect_dustCall extends ethereum.Call {
  get inputs(): Collect_dustCall__Inputs {
    return new Collect_dustCall__Inputs(this);
  }

  get outputs(): Collect_dustCall__Outputs {
    return new Collect_dustCall__Outputs(this);
  }
}

export class Collect_dustCall__Inputs {
  _call: Collect_dustCall;

  constructor(call: Collect_dustCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class Collect_dustCall__Outputs {
  _call: Collect_dustCall;

  constructor(call: Collect_dustCall) {
    this._call = call;
  }
}
